<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>aspect oriented programming on Haruaki TAMADA</title>
    <link>https://tamada.github.io/tags/aspect-oriented-programming/</link>
    <description>Recent content in aspect oriented programming on Haruaki TAMADA</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Jul 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://tamada.github.io/tags/aspect-oriented-programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Auto-extraction of Dynamic Birthmarks</title>
      <link>https://tamada.github.io/research/automatic_extraction_of_dynamic_birthmarks/</link>
      <pubDate>Mon, 15 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://tamada.github.io/research/automatic_extraction_of_dynamic_birthmarks/</guid>
      <description>:speaking_head: Overview The software birthmark methods are proposed to find the stolen software from the huge number of suspects. The software birthmark methods are classified into two manners, static and dynamic manners. Different from the static birthmarks, dynamic birthmarks require inputs since they base on runtime behaviors. Also, the dynamic birthmark varies depending on the inputs, therefore, it is difficult to extract beforehand. Hence the extraction cost of the dynamic birthmarks is generally high than the static birthmarks.</description>
    </item>
    
  </channel>
</rss>
