[{"categories":null,"contents":" My hobbies are:\n Drinking Beer, Taking vacation on Okinawa islands, Programming, and Trekking.  Drinking Beer I love craft beers, especially stout beer. I dream to brew own beer.\nTaking vacation on Okinawa islands 沖縄の本島，離島でのんびりするのも好きです． 最近は1年に1度は沖縄に行っている気がします．\nProgramming 何かツールを作ろうと思い立ったら１〜３週間程度で作り上げている気がします． コマンドラインのツールがほとんどですが，多くは GitHub にて公開しています． 主に Java を使って書いています．最近は JavaScript も面白いと思っています．\nただ，途中で放り投げたものもいくつかあります．\nTrekking 山歩きも好きです． 本格的な山登りとは違い，のんびりと歩き回ります．\n","permalink":"https://tamada.github.io/hobbies/","tags":null,"title":"Hobbies"},{"categories":null,"contents":" Program committee member, the 17th IEEE/ACIS International Conference on Computer and Information Science (ICIS 2019) Program committee member, the 3rd International Conference on Big Data, Cloud Computing, and Data Science Engineering (BCD 2019) Program committee member, the 17th IEEE/ACIS International Conference on Computer and Information Science (ICIS 2018) Program committee member, the 3rd International Conference on Big Data, Cloud Computing, and Data Science Engineering (BCD 2018) Program committee member, the 2nd International Conference on Social Informatics and Systems Science (SISS 2017) Finance Chair, the 2th IEEE/ACIS International Conference on Big Data, Cloud Computing, and Data Science (BCD 2017) Program committee member, the 15th IEEE/ACIS International Conference on Computer and Information Science (ICIS 2017) Program committee member, the 15th IEEE/ACIS International Conference on Computer and Information Science (ICIS 2016) Program committee member, Joint Conference of the 21st International Workshop on Software Measurement (IWSM2011) and the 6th International Conference on Software Process and Product Measurement (MENSURA2011)  ","permalink":"https://tamada.github.io/activities/","tags":null,"title":"Activities"},{"categories":null,"contents":"Create heat map image from given csv file. Go language implementation of tamada/heatman.\n","permalink":"https://tamada.github.io/projects/creations/goheatman/","tags":["bash/shell","GitHub","golang","Homebrew","csv"],"title":"goheatman - heatmap generator"},{"categories":null,"contents":"This tool deletes duplicated lines.\nGNU core utilities have uniq command for deleting duplicate lines. However, uniq command deletes only continuous duplicate lines. When deleting not continuous duplicate lines, we use sort command together, in that case, the order of the list was not kept.\nWe want to delete not continuous duplicated lines with remaining the order.\n","permalink":"https://tamada.github.io/projects/creations/uniq2/","tags":["bash/shell","GitHub","golang","Homebrew"],"title":"uniq2"},{"categories":null,"contents":"There are too many repositories. We love programming; however, to manage many repositories is quite hard and bothersome tasks. Therefore, we built a headquarter for managing the git repositories, named rrh. rrh manages repositories by categorizing in groups and execute git command to the groups.\nI know the tool ghq, manages the git repositories. However, I cannot use it for the following reasons.\n there are quite many repositories in my home directory.  To start using ghq, we clone the repositories. However, I did not accept to clone all of the repositories.  The location of repositories is fixed in the config file and is accepted only one location.  I decide the directory layout in my home directory.   Additionally, I edit several repositories in a day, when I work hard. Consequently, the progress of each repository is obscured; I cannot remember a lot of things. Therefore, it is glad to see the last modified date of branches.\nrrh is now growing. Please hack rrh itself.\n","permalink":"https://tamada.github.io/projects/creations/rrh/","tags":["git","git repository","golang","GitHub","bash/shell","Homebrew"],"title":"rrh - a simple git repository manager"},{"categories":null,"contents":"This tool validates the following nine rules for the object oriented programming exercise in Java language.\nA book titled \u0026lsquo;The ThoughtWorks Anthology: Essays on Software Technology and Innovation\u0026rsquo; are published. Chapter 6 in the book introduces object calisthenics for better software design. The rules shown in the book are as follows.\n Use 1 level of indentation per method (DONE), Do not use the else keyword (DONE), Wrap all primitives and strings (DONE), Use only 1 dot per line (DONE), Do not abbreviate (Not support yet), Keep all entities small,  50 lines in a source file (DONE), 3 lines in a method (DONE), and 10 classses in a package (Not support yet).  Do not use any classes with more than 2 instance variables (DONE), Use first-class collections (DONE), and Do not use any getters/setters/properties (DONE) Unfortunately, to confirm obeying the rules is by a human eye. Therefore, this tool was developed to validate the rules automatically by analyzing given Java source codes. By the way, this tool is programed to obey above rules.  ","permalink":"https://tamada.github.io/projects/creations/9rules/","tags":["Java","GitHub","maven","code quality evaluation"],"title":"9rules - a tool for checking small object programming"},{"categories":null,"contents":" This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml\n[outputs] home = [\u0026quot;HTML\u0026quot;, \u0026quot;JSON\u0026quot;]  Searching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category\n... \u0026quot;contents\u0026quot;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026quot;tags\u0026quot;:{{ .Params.tags | jsonify }}{{end}}, \u0026quot;categories\u0026quot; : {{ .Params.categories | jsonify }}, ...  Edit fuse.js options to Search static/js/search.js\nkeys: [ \u0026quot;title\u0026quot;, \u0026quot;contents\u0026quot;, \u0026quot;tags\u0026quot;, \u0026quot;categories\u0026quot; ]  ","permalink":"https://tamada.github.io/search/","tags":null,"title":"Search Results"}]