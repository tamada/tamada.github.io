<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>birthmarks on Haruaki TAMADA</title>
    <link>https://tamada.github.io/categories/birthmarks/</link>
    <description>Recent content in birthmarks on Haruaki TAMADA</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Jul 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://tamada.github.io/categories/birthmarks/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Auto-extraction of Dynamic Birthmarks</title>
      <link>https://tamada.github.io/research/automatic_extraction_of_dynamic_birthmarks/</link>
      <pubDate>Mon, 15 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://tamada.github.io/research/automatic_extraction_of_dynamic_birthmarks/</guid>
      <description>ðŸ—£ Overview The software birthmark methods are proposed to find the stolen software from the huge number of suspects. The software birthmark methods are classified into two manners, static and dynamic manners. Different from the static birthmarks, dynamic birthmarks require inputs since they base on runtime behaviors. Also, the dynamic birthmark varies depending on the inputs, therefore, it is difficult to extract beforehand. Hence the extraction cost of the dynamic birthmarks is generally high than the static birthmarks.</description>
    </item>
    
    <item>
      <title>Concept of Birthmarks</title>
      <link>https://tamada.github.io/research/birthmark_concept/</link>
      <pubDate>Thu, 01 Sep 2005 00:00:00 +0000</pubDate>
      
      <guid>https://tamada.github.io/research/birthmark_concept/</guid>
      <description>ðŸ—£ Overview To detect the theft of Java class files efficiently, we propose a concept of Java birthmarks, which are unique and native characteristics of every class file. For a pair of class files $p$ and $q$, if $q$ has the same birthmark as $p$&#39;s, $q$ is suspected as a copy of $p$. Ideally, the birthmarks should satisfy the following properties: (a) preservation &amp;ndash; the birthmarks should be preserved even if the original class file is tampered with, and (b) distinction &amp;ndash; independent class files must be distinguished by completely different birthmarks.</description>
    </item>
    
  </channel>
</rss>