<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>invokedynamic on Haruaki TAMADA</title>
    <link>https://tamada.github.io/categories/invokedynamic/</link>
    <description>Recent content in invokedynamic on Haruaki TAMADA</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 01 Aug 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://tamada.github.io/categories/invokedynamic/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Obfuscation by invokedynamic</title>
      <link>https://tamada.github.io/research/obfuscation_by_invokedynamic/</link>
      <pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tamada.github.io/research/obfuscation_by_invokedynamic/</guid>
      <description>ðŸ—£ Overview This paper proposes an obfuscation method against illegal analysis. The proposed method tries to build a fake call flow graph from debugging tools. The call flow graph represents relations among methods and helps understanding of a program. The fake call flow graph leads misunderstanding of the program. We focus on a hook mechanism of the method call for changing a callee. We conduct two experiments to evaluate the proposed method.</description>
    </item>
    
  </channel>
</rss>